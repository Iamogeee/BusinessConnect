// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  name              String
  email             String    @unique
  password          String
  interests         String?
  preferredRating   Float?
  favoriteCategories String[]
  hasSelectedCategories  Boolean   @default(false)
  interactions      Interaction[]
  recommendations   Recommendation[]
}

model Business {
  id                Int       @id @default(autoincrement())
  placeId           String             @unique
  name              String
  location          String
  contactInformation String
  overview          String             @default("")
  businessHours     String[]
  services          BusinessService[]
  averageRating     Float?
  businessType      String
  photoReference    String 
  photos            String[]   
  recommendations   Recommendation[]
  category          String             @default("")   
  interactions      Interaction[]      

}

model Interaction {
  id         Int       @id @default(autoincrement())
  userId     Int
  businessId Int
  liked       Boolean   @default(false)
  saved       Boolean   @default(false)
  viewed     Boolean    @default(false)
  rated      Float?
  reviewed   String?
  User       User      @relation(fields: [userId], references: [id])
  Business   Business  @relation(fields: [businessId], references: [id])

  @@unique([userId, businessId]) 
}

model Service {
  id                Int       @id @default(autoincrement())
  name              String    @unique
  businesses        BusinessService[]
}

model BusinessService {
  businessId        Int
  serviceId         Int
  business          Business  @relation(fields: [businessId], references: [id])
  service           Service   @relation(fields: [serviceId], references: [id])
  @@id([businessId, serviceId])
}

model Review {
  id                Int       @id @default(autoincrement())
  businessId        Int
  rating            Int
  reviewText        String
  name              String    
  profilePhoto      String    @default("")
}

model Recommendation {
  id                Int       @id @default(autoincrement())
  userId            Int
  businessId        Int
  user              User      @relation(fields: [userId], references: [id])
  business          Business  @relation(fields: [businessId], references: [id])
}