// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  name               String
  email              String    @unique
  password           String
  location           String?   
  bio                String?   
  interests          String?   
  profilePicture     String?  
  favoriteCategories String[]
  preferredRating    Float?
  hasSelectedCategories Boolean @default(false)
  interactions       Interaction[]
  recommendations    Recommendation[]
}


model Business {
  id                    Int               @id @default(autoincrement())
  placeId               String            @unique
  name                  String
  location              String
  contactInformation    String
  overview              String            @default("")
  businessHours         String[]
  averageRating         Float?
  businessType          String
  photoReference        String 
  photos                String[]   
  category              String            @default("")   
  interactions          Interaction[]
  priceLevel            Int?
  numberOfRatings       Int?    
}

model Interaction {
  id                   Int       @id @default(autoincrement())
  userId               Int
  businessId           Int
  liked                Boolean   @default(false)
  saved                Boolean   @default(false)
  viewed               Boolean   @default(false)
  rated                Float?
  reviewed             String?
  User                 User      @relation(fields: [userId], references: [id])
  Business             Business  @relation(fields: [businessId], references: [id])

  @@unique([userId, businessId]) 
}

model SearchHistory {
  id        Int      @id @default(autoincrement())
  userId    Int
  query     String
  timestamp DateTime @default(now())
}


model Review {
  id                   Int       @id @default(autoincrement())
  businessId           Int
  rating               Int
  reviewText           String
  name                 String    
  profilePhoto         String    @default("")
}

model Recommendation {
  id                   Int       @id @default(autoincrement())
  userId               Int
  recommendations      Json
  user                 User      @relation(fields: [userId], references: [id])
}